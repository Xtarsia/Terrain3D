[gd_scene load_steps=5 format=3 uid="uid://17j6fn6spp58"]

[sub_resource type="BoxMesh" id="BoxMesh_4xowi"]

[sub_resource type="Shader" id="Shader_a202f"]
code = "shader_type spatial;

uniform float w_1 : hint_range(0.0, 1.0, 0.01) = 1.0;
uniform float w_2 : hint_range(0.0, 1.0, 0.01) = 0.0;
uniform float w_3 : hint_range(0.0, 1.0, 0.01) = 0.0;

const vec3 BARY_CENTRIC_LUT[253] = vec3[](
	vec3(0.0000, 0.0000, 1.0000),
	vec3(0.0000, 0.0476, 0.9523),
	vec3(0.0000, 0.0952, 0.9047),
	vec3(0.0000, 0.1428, 0.8571),
	vec3(0.0000, 0.1904, 0.8095),
	vec3(0.0000, 0.2380, 0.7619),
	vec3(0.0000, 0.2857, 0.7142),
	vec3(0.0000, 0.3333, 0.6666),
	vec3(0.0000, 0.3809, 0.6190),
	vec3(0.0000, 0.4285, 0.5714),
	vec3(0.0000, 0.4761, 0.5238),
	vec3(0.0000, 0.5238, 0.4761),
	vec3(0.0000, 0.5714, 0.4285),
	vec3(0.0000, 0.6190, 0.3809),
	vec3(0.0000, 0.6666, 0.3333),
	vec3(0.0000, 0.7142, 0.2857),
	vec3(0.0000, 0.7619, 0.2380),
	vec3(0.0000, 0.8095, 0.1904),
	vec3(0.0000, 0.8571, 0.1428),
	vec3(0.0000, 0.9047, 0.0952),
	vec3(0.0000, 0.9523, 0.0476),
	vec3(0.0000, 1.0000, 0.0000),
	vec3(0.0476, 0.0000, 0.9523),
	vec3(0.0476, 0.0476, 0.9047),
	vec3(0.0476, 0.0952, 0.8571),
	vec3(0.0476, 0.1428, 0.8095),
	vec3(0.0476, 0.1904, 0.7619),
	vec3(0.0476, 0.2380, 0.7142),
	vec3(0.0476, 0.2857, 0.6666),
	vec3(0.0476, 0.3333, 0.6190),
	vec3(0.0476, 0.3809, 0.5714),
	vec3(0.0476, 0.4285, 0.5238),
	vec3(0.0476, 0.4761, 0.4761),
	vec3(0.0476, 0.5238, 0.4285),
	vec3(0.0476, 0.5714, 0.3809),
	vec3(0.0476, 0.6190, 0.3333),
	vec3(0.0476, 0.6666, 0.2857),
	vec3(0.0476, 0.7142, 0.2380),
	vec3(0.0476, 0.7619, 0.1904),
	vec3(0.0476, 0.8095, 0.1428),
	vec3(0.0476, 0.8571, 0.0952),
	vec3(0.0476, 0.9047, 0.0476),
	vec3(0.0476, 0.9523, 0.0000),
	vec3(0.0952, 0.0000, 0.9047),
	vec3(0.0952, 0.0476, 0.8571),
	vec3(0.0952, 0.0952, 0.8095),
	vec3(0.0952, 0.1428, 0.7619),
	vec3(0.0952, 0.1904, 0.7142),
	vec3(0.0952, 0.2380, 0.6666),
	vec3(0.0952, 0.2857, 0.6190),
	vec3(0.0952, 0.3333, 0.5714),
	vec3(0.0952, 0.3809, 0.5238),
	vec3(0.0952, 0.4285, 0.4761),
	vec3(0.0952, 0.4761, 0.4285),
	vec3(0.0952, 0.5238, 0.3809),
	vec3(0.0952, 0.5714, 0.3333),
	vec3(0.0952, 0.6190, 0.2857),
	vec3(0.0952, 0.6666, 0.2380),
	vec3(0.0952, 0.7142, 0.1904),
	vec3(0.0952, 0.7619, 0.1428),
	vec3(0.0952, 0.8095, 0.0952),
	vec3(0.0952, 0.8571, 0.0476),
	vec3(0.0952, 0.9047, 0.0000),
	vec3(0.1428, 0.0000, 0.8571),
	vec3(0.1428, 0.0476, 0.8095),
	vec3(0.1428, 0.0952, 0.7619),
	vec3(0.1428, 0.1428, 0.7142),
	vec3(0.1428, 0.1904, 0.6666),
	vec3(0.1428, 0.2380, 0.6190),
	vec3(0.1428, 0.2857, 0.5714),
	vec3(0.1428, 0.3333, 0.5238),
	vec3(0.1428, 0.3809, 0.4761),
	vec3(0.1428, 0.4285, 0.4285),
	vec3(0.1428, 0.4761, 0.3809),
	vec3(0.1428, 0.5238, 0.3333),
	vec3(0.1428, 0.5714, 0.2857),
	vec3(0.1428, 0.6190, 0.2380),
	vec3(0.1428, 0.6666, 0.1904),
	vec3(0.1428, 0.7142, 0.1428),
	vec3(0.1428, 0.7619, 0.0952),
	vec3(0.1428, 0.8095, 0.0476),
	vec3(0.1428, 0.8571, 0.0000),
	vec3(0.1904, 0.0000, 0.8095),
	vec3(0.1904, 0.0476, 0.7619),
	vec3(0.1904, 0.0952, 0.7142),
	vec3(0.1904, 0.1428, 0.6666),
	vec3(0.1904, 0.1904, 0.6190),
	vec3(0.1904, 0.2380, 0.5714),
	vec3(0.1904, 0.2857, 0.5238),
	vec3(0.1904, 0.3333, 0.4761),
	vec3(0.1904, 0.3809, 0.4285),
	vec3(0.1904, 0.4285, 0.3809),
	vec3(0.1904, 0.4761, 0.3333),
	vec3(0.1904, 0.5238, 0.2857),
	vec3(0.1904, 0.5714, 0.2380),
	vec3(0.1904, 0.6190, 0.1904),
	vec3(0.1904, 0.6666, 0.1428),
	vec3(0.1904, 0.7142, 0.0952),
	vec3(0.1904, 0.7619, 0.0476),
	vec3(0.1904, 0.8095, 0.0000),
	vec3(0.2380, 0.0000, 0.7619),
	vec3(0.2380, 0.0476, 0.7142),
	vec3(0.2380, 0.0952, 0.6666),
	vec3(0.2380, 0.1428, 0.6190),
	vec3(0.2380, 0.1904, 0.5714),
	vec3(0.2380, 0.2380, 0.5238),
	vec3(0.2380, 0.2857, 0.4761),
	vec3(0.2380, 0.3333, 0.4285),
	vec3(0.2380, 0.3809, 0.3809),
	vec3(0.2380, 0.4285, 0.3333),
	vec3(0.2380, 0.4761, 0.2857),
	vec3(0.2380, 0.5238, 0.2380),
	vec3(0.2380, 0.5714, 0.1904),
	vec3(0.2380, 0.6190, 0.1428),
	vec3(0.2380, 0.6666, 0.0952),
	vec3(0.2380, 0.7142, 0.0476),
	vec3(0.2380, 0.7619, 0.0000),
	vec3(0.2857, 0.0000, 0.7142),
	vec3(0.2857, 0.0476, 0.6666),
	vec3(0.2857, 0.0952, 0.6190),
	vec3(0.2857, 0.1428, 0.5714),
	vec3(0.2857, 0.1904, 0.5238),
	vec3(0.2857, 0.2380, 0.4761),
	vec3(0.2857, 0.2857, 0.4285),
	vec3(0.2857, 0.3333, 0.3809),
	vec3(0.2857, 0.3809, 0.3333),
	vec3(0.2857, 0.4285, 0.2857),
	vec3(0.2857, 0.4761, 0.2380),
	vec3(0.2857, 0.5238, 0.1904),
	vec3(0.2857, 0.5714, 0.1428),
	vec3(0.2857, 0.6190, 0.0952),
	vec3(0.2857, 0.6666, 0.0476),
	vec3(0.2857, 0.7142, 0.0000),
	vec3(0.3333, 0.0000, 0.6666),
	vec3(0.3333, 0.0476, 0.6190),
	vec3(0.3333, 0.0952, 0.5714),
	vec3(0.3333, 0.1428, 0.5238),
	vec3(0.3333, 0.1904, 0.4761),
	vec3(0.3333, 0.2380, 0.4285),
	vec3(0.3333, 0.2857, 0.3809),
	vec3(0.3333, 0.3333, 0.3333),
	vec3(0.3333, 0.3809, 0.2857),
	vec3(0.3333, 0.4285, 0.2380),
	vec3(0.3333, 0.4761, 0.1904),
	vec3(0.3333, 0.5238, 0.1428),
	vec3(0.3333, 0.5714, 0.0952),
	vec3(0.3333, 0.6190, 0.0476),
	vec3(0.3333, 0.6666, 0.0000),
	vec3(0.3809, 0.0000, 0.6190),
	vec3(0.3809, 0.0476, 0.5714),
	vec3(0.3809, 0.0952, 0.5238),
	vec3(0.3809, 0.1428, 0.4761),
	vec3(0.3809, 0.1904, 0.4285),
	vec3(0.3809, 0.2380, 0.3809),
	vec3(0.3809, 0.2857, 0.3333),
	vec3(0.3809, 0.3333, 0.2857),
	vec3(0.3809, 0.3809, 0.2380),
	vec3(0.3809, 0.4285, 0.1904),
	vec3(0.3809, 0.4761, 0.1428),
	vec3(0.3809, 0.5238, 0.0952),
	vec3(0.3809, 0.5714, 0.0476),
	vec3(0.3809, 0.6190, 0.0000),
	vec3(0.4285, 0.0000, 0.5714),
	vec3(0.4285, 0.0476, 0.5238),
	vec3(0.4285, 0.0952, 0.4761),
	vec3(0.4285, 0.1428, 0.4285),
	vec3(0.4285, 0.1904, 0.3809),
	vec3(0.4285, 0.2380, 0.3333),
	vec3(0.4285, 0.2857, 0.2857),
	vec3(0.4285, 0.3333, 0.2380),
	vec3(0.4285, 0.3809, 0.1904),
	vec3(0.4285, 0.4285, 0.1428),
	vec3(0.4285, 0.4761, 0.0952),
	vec3(0.4285, 0.5238, 0.0476),
	vec3(0.4285, 0.5714, 0.0000),
	vec3(0.4761, 0.0000, 0.5238),
	vec3(0.4761, 0.0476, 0.4761),
	vec3(0.4761, 0.0952, 0.4285),
	vec3(0.4761, 0.1428, 0.3809),
	vec3(0.4761, 0.1904, 0.3333),
	vec3(0.4761, 0.2380, 0.2857),
	vec3(0.4761, 0.2857, 0.2380),
	vec3(0.4761, 0.3333, 0.1904),
	vec3(0.4761, 0.3809, 0.1428),
	vec3(0.4761, 0.4285, 0.0952),
	vec3(0.4761, 0.4761, 0.0476),
	vec3(0.4761, 0.5238, 0.0000),
	vec3(0.5238, 0.0000, 0.4761),
	vec3(0.5238, 0.0476, 0.4285),
	vec3(0.5238, 0.0952, 0.3809),
	vec3(0.5238, 0.1428, 0.3333),
	vec3(0.5238, 0.1904, 0.2857),
	vec3(0.5238, 0.2380, 0.2380),
	vec3(0.5238, 0.2857, 0.1904),
	vec3(0.5238, 0.3333, 0.1428),
	vec3(0.5238, 0.3809, 0.0952),
	vec3(0.5238, 0.4285, 0.0476),
	vec3(0.5238, 0.4761, 0.0000),
	vec3(0.5714, 0.0000, 0.4285),
	vec3(0.5714, 0.0476, 0.3809),
	vec3(0.5714, 0.0952, 0.3333),
	vec3(0.5714, 0.1428, 0.2857),
	vec3(0.5714, 0.1904, 0.2380),
	vec3(0.5714, 0.2380, 0.1904),
	vec3(0.5714, 0.2857, 0.1428),
	vec3(0.5714, 0.3333, 0.0952),
	vec3(0.5714, 0.3809, 0.0476),
	vec3(0.5714, 0.4285, 0.0000),
	vec3(0.6190, 0.0000, 0.3809),
	vec3(0.6190, 0.0476, 0.3333),
	vec3(0.6190, 0.0952, 0.2857),
	vec3(0.6190, 0.1428, 0.2380),
	vec3(0.6190, 0.1904, 0.1904),
	vec3(0.6190, 0.2380, 0.1428),
	vec3(0.6190, 0.2857, 0.0952),
	vec3(0.6190, 0.3333, 0.0476),
	vec3(0.6190, 0.3809, 0.0000),
	vec3(0.6666, 0.0000, 0.3333),
	vec3(0.6666, 0.0476, 0.2857),
	vec3(0.6666, 0.0952, 0.2380),
	vec3(0.6666, 0.1428, 0.1904),
	vec3(0.6666, 0.1904, 0.1428),
	vec3(0.6666, 0.2380, 0.0952),
	vec3(0.6666, 0.2857, 0.0476),
	vec3(0.6666, 0.3333, 0.0000),
	vec3(0.7142, 0.0000, 0.2857),
	vec3(0.7142, 0.0476, 0.2380),
	vec3(0.7142, 0.0952, 0.1904),
	vec3(0.7142, 0.1428, 0.1428),
	vec3(0.7142, 0.1904, 0.0952),
	vec3(0.7142, 0.2380, 0.0476),
	vec3(0.7142, 0.2857, 0.0000),
	vec3(0.7619, 0.0000, 0.2380),
	vec3(0.7619, 0.0476, 0.1904),
	vec3(0.7619, 0.0952, 0.1428),
	vec3(0.7619, 0.1428, 0.0952),
	vec3(0.7619, 0.1904, 0.0476),
	vec3(0.7619, 0.2380, 0.0000),
	vec3(0.8095, 0.0000, 0.1904),
	vec3(0.8095, 0.0476, 0.1428),
	vec3(0.8095, 0.0952, 0.0952),
	vec3(0.8095, 0.1428, 0.0476),
	vec3(0.8095, 0.1904, 0.0000),
	vec3(0.8571, 0.0000, 0.1428),
	vec3(0.8571, 0.0476, 0.0952),
	vec3(0.8571, 0.0952, 0.0476),
	vec3(0.8571, 0.1428, 0.0000),
	vec3(0.9047, 0.0000, 0.0952),
	vec3(0.9047, 0.0476, 0.0476),
	vec3(0.9047, 0.0952, 0.0000),
	vec3(0.9523, 0.0000, 0.0476),
	vec3(0.9523, 0.0476, 0.0000),
	vec3(1.0000, 0.0000, 0.0000)
);

const vec3 BARY_CENTRIC_9BIT_LUT[496] = vec3[](
	vec3(0.0000, 0.0000, 1.0000),
	vec3(0.0000, 0.0333, 0.9666),
	vec3(0.0000, 0.0666, 0.9333),
	vec3(0.0000, 0.1000, 0.8999),
	vec3(0.0000, 0.1333, 0.8666),
	vec3(0.0000, 0.1666, 0.8333),
	vec3(0.0000, 0.2000, 0.8000),
	vec3(0.0000, 0.2333, 0.7666),
	vec3(0.0000, 0.2666, 0.7333),
	vec3(0.0000, 0.3000, 0.6999),
	vec3(0.0000, 0.3333, 0.6666),
	vec3(0.0000, 0.3666, 0.6333),
	vec3(0.0000, 0.4000, 0.6000),
	vec3(0.0000, 0.4333, 0.5666),
	vec3(0.0000, 0.4666, 0.5333),
	vec3(0.0000, 0.5000, 0.5000),
	vec3(0.0000, 0.5333, 0.4666),
	vec3(0.0000, 0.5666, 0.4333),
	vec3(0.0000, 0.6000, 0.4000),
	vec3(0.0000, 0.6333, 0.3666),
	vec3(0.0000, 0.6666, 0.3333),
	vec3(0.0000, 0.6999, 0.3000),
	vec3(0.0000, 0.7333, 0.2666),
	vec3(0.0000, 0.7666, 0.2333),
	vec3(0.0000, 0.8000, 0.2000),
	vec3(0.0000, 0.8333, 0.1666),
	vec3(0.0000, 0.8666, 0.1333),
	vec3(0.0000, 0.8999, 0.1000),
	vec3(0.0000, 0.9333, 0.0666),
	vec3(0.0000, 0.9666, 0.0333),
	vec3(0.0000, 1.0000, 0.0000),
	vec3(0.0333, 0.0000, 0.9666),
	vec3(0.0333, 0.0333, 0.9333),
	vec3(0.0333, 0.0666, 0.8999),
	vec3(0.0333, 0.1000, 0.8666),
	vec3(0.0333, 0.1333, 0.8333),
	vec3(0.0333, 0.1666, 0.8000),
	vec3(0.0333, 0.2000, 0.7666),
	vec3(0.0333, 0.2333, 0.7333),
	vec3(0.0333, 0.2666, 0.6999),
	vec3(0.0333, 0.3000, 0.6666),
	vec3(0.0333, 0.3333, 0.6333),
	vec3(0.0333, 0.3666, 0.6000),
	vec3(0.0333, 0.4000, 0.5666),
	vec3(0.0333, 0.4333, 0.5333),
	vec3(0.0333, 0.4666, 0.5000),
	vec3(0.0333, 0.5000, 0.4666),
	vec3(0.0333, 0.5333, 0.4333),
	vec3(0.0333, 0.5666, 0.4000),
	vec3(0.0333, 0.6000, 0.3666),
	vec3(0.0333, 0.6333, 0.3333),
	vec3(0.0333, 0.6666, 0.3000),
	vec3(0.0333, 0.6999, 0.2666),
	vec3(0.0333, 0.7333, 0.2333),
	vec3(0.0333, 0.7666, 0.2000),
	vec3(0.0333, 0.8000, 0.1666),
	vec3(0.0333, 0.8333, 0.1333),
	vec3(0.0333, 0.8666, 0.1000),
	vec3(0.0333, 0.8999, 0.0666),
	vec3(0.0333, 0.9333, 0.0333),
	vec3(0.0333, 0.9666, 0.0000),
	vec3(0.0666, 0.0000, 0.9333),
	vec3(0.0666, 0.0333, 0.8999),
	vec3(0.0666, 0.0666, 0.8666),
	vec3(0.0666, 0.1000, 0.8333),
	vec3(0.0666, 0.1333, 0.8000),
	vec3(0.0666, 0.1666, 0.7666),
	vec3(0.0666, 0.2000, 0.7333),
	vec3(0.0666, 0.2333, 0.6999),
	vec3(0.0666, 0.2666, 0.6666),
	vec3(0.0666, 0.3000, 0.6333),
	vec3(0.0666, 0.3333, 0.6000),
	vec3(0.0666, 0.3666, 0.5666),
	vec3(0.0666, 0.4000, 0.5333),
	vec3(0.0666, 0.4333, 0.5000),
	vec3(0.0666, 0.4666, 0.4666),
	vec3(0.0666, 0.5000, 0.4333),
	vec3(0.0666, 0.5333, 0.4000),
	vec3(0.0666, 0.5666, 0.3666),
	vec3(0.0666, 0.6000, 0.3333),
	vec3(0.0666, 0.6333, 0.3000),
	vec3(0.0666, 0.6666, 0.2666),
	vec3(0.0666, 0.6999, 0.2333),
	vec3(0.0666, 0.7333, 0.2000),
	vec3(0.0666, 0.7666, 0.1666),
	vec3(0.0666, 0.8000, 0.1333),
	vec3(0.0666, 0.8333, 0.1000),
	vec3(0.0666, 0.8666, 0.0666),
	vec3(0.0666, 0.8999, 0.0333),
	vec3(0.0666, 0.9333, 0.0000),
	vec3(0.1000, 0.0000, 0.8999),
	vec3(0.1000, 0.0333, 0.8666),
	vec3(0.1000, 0.0666, 0.8333),
	vec3(0.1000, 0.1000, 0.8000),
	vec3(0.1000, 0.1333, 0.7666),
	vec3(0.1000, 0.1666, 0.7333),
	vec3(0.1000, 0.2000, 0.6999),
	vec3(0.1000, 0.2333, 0.6666),
	vec3(0.1000, 0.2666, 0.6333),
	vec3(0.1000, 0.3000, 0.6000),
	vec3(0.1000, 0.3333, 0.5666),
	vec3(0.1000, 0.3666, 0.5333),
	vec3(0.1000, 0.4000, 0.5000),
	vec3(0.1000, 0.4333, 0.4666),
	vec3(0.1000, 0.4666, 0.4333),
	vec3(0.1000, 0.5000, 0.4000),
	vec3(0.1000, 0.5333, 0.3666),
	vec3(0.1000, 0.5666, 0.3333),
	vec3(0.1000, 0.6000, 0.3000),
	vec3(0.1000, 0.6333, 0.2666),
	vec3(0.1000, 0.6666, 0.2333),
	vec3(0.1000, 0.6999, 0.2000),
	vec3(0.1000, 0.7333, 0.1666),
	vec3(0.1000, 0.7666, 0.1333),
	vec3(0.1000, 0.8000, 0.1000),
	vec3(0.1000, 0.8333, 0.0666),
	vec3(0.1000, 0.8666, 0.0333),
	vec3(0.1000, 0.8999, 0.0000),
	vec3(0.1333, 0.0000, 0.8666),
	vec3(0.1333, 0.0333, 0.8333),
	vec3(0.1333, 0.0666, 0.8000),
	vec3(0.1333, 0.1000, 0.7666),
	vec3(0.1333, 0.1333, 0.7333),
	vec3(0.1333, 0.1666, 0.6999),
	vec3(0.1333, 0.2000, 0.6666),
	vec3(0.1333, 0.2333, 0.6333),
	vec3(0.1333, 0.2666, 0.6000),
	vec3(0.1333, 0.3000, 0.5666),
	vec3(0.1333, 0.3333, 0.5333),
	vec3(0.1333, 0.3666, 0.5000),
	vec3(0.1333, 0.4000, 0.4666),
	vec3(0.1333, 0.4333, 0.4333),
	vec3(0.1333, 0.4666, 0.4000),
	vec3(0.1333, 0.5000, 0.3666),
	vec3(0.1333, 0.5333, 0.3333),
	vec3(0.1333, 0.5666, 0.3000),
	vec3(0.1333, 0.6000, 0.2666),
	vec3(0.1333, 0.6333, 0.2333),
	vec3(0.1333, 0.6666, 0.2000),
	vec3(0.1333, 0.6999, 0.1666),
	vec3(0.1333, 0.7333, 0.1333),
	vec3(0.1333, 0.7666, 0.1000),
	vec3(0.1333, 0.8000, 0.0666),
	vec3(0.1333, 0.8333, 0.0333),
	vec3(0.1333, 0.8666, 0.0000),
	vec3(0.1666, 0.0000, 0.8333),
	vec3(0.1666, 0.0333, 0.8000),
	vec3(0.1666, 0.0666, 0.7666),
	vec3(0.1666, 0.1000, 0.7333),
	vec3(0.1666, 0.1333, 0.6999),
	vec3(0.1666, 0.1666, 0.6666),
	vec3(0.1666, 0.2000, 0.6333),
	vec3(0.1666, 0.2333, 0.6000),
	vec3(0.1666, 0.2666, 0.5666),
	vec3(0.1666, 0.3000, 0.5333),
	vec3(0.1666, 0.3333, 0.5000),
	vec3(0.1666, 0.3666, 0.4666),
	vec3(0.1666, 0.4000, 0.4333),
	vec3(0.1666, 0.4333, 0.4000),
	vec3(0.1666, 0.4666, 0.3666),
	vec3(0.1666, 0.5000, 0.3333),
	vec3(0.1666, 0.5333, 0.3000),
	vec3(0.1666, 0.5666, 0.2666),
	vec3(0.1666, 0.6000, 0.2333),
	vec3(0.1666, 0.6333, 0.2000),
	vec3(0.1666, 0.6666, 0.1666),
	vec3(0.1666, 0.6999, 0.1333),
	vec3(0.1666, 0.7333, 0.1000),
	vec3(0.1666, 0.7666, 0.0666),
	vec3(0.1666, 0.8000, 0.0333),
	vec3(0.1666, 0.8333, 0.0000),
	vec3(0.2000, 0.0000, 0.8000),
	vec3(0.2000, 0.0333, 0.7666),
	vec3(0.2000, 0.0666, 0.7333),
	vec3(0.2000, 0.1000, 0.6999),
	vec3(0.2000, 0.1333, 0.6666),
	vec3(0.2000, 0.1666, 0.6333),
	vec3(0.2000, 0.2000, 0.6000),
	vec3(0.2000, 0.2333, 0.5666),
	vec3(0.2000, 0.2666, 0.5333),
	vec3(0.2000, 0.3000, 0.5000),
	vec3(0.2000, 0.3333, 0.4666),
	vec3(0.2000, 0.3666, 0.4333),
	vec3(0.2000, 0.4000, 0.4000),
	vec3(0.2000, 0.4333, 0.3666),
	vec3(0.2000, 0.4666, 0.3333),
	vec3(0.2000, 0.5000, 0.3000),
	vec3(0.2000, 0.5333, 0.2666),
	vec3(0.2000, 0.5666, 0.2333),
	vec3(0.2000, 0.6000, 0.2000),
	vec3(0.2000, 0.6333, 0.1666),
	vec3(0.2000, 0.6666, 0.1333),
	vec3(0.2000, 0.6999, 0.1000),
	vec3(0.2000, 0.7333, 0.0666),
	vec3(0.2000, 0.7666, 0.0333),
	vec3(0.2000, 0.8000, 0.0000),
	vec3(0.2333, 0.0000, 0.7666),
	vec3(0.2333, 0.0333, 0.7333),
	vec3(0.2333, 0.0666, 0.6999),
	vec3(0.2333, 0.1000, 0.6666),
	vec3(0.2333, 0.1333, 0.6333),
	vec3(0.2333, 0.1666, 0.6000),
	vec3(0.2333, 0.2000, 0.5666),
	vec3(0.2333, 0.2333, 0.5333),
	vec3(0.2333, 0.2666, 0.5000),
	vec3(0.2333, 0.3000, 0.4666),
	vec3(0.2333, 0.3333, 0.4333),
	vec3(0.2333, 0.3666, 0.4000),
	vec3(0.2333, 0.4000, 0.3666),
	vec3(0.2333, 0.4333, 0.3333),
	vec3(0.2333, 0.4666, 0.3000),
	vec3(0.2333, 0.5000, 0.2666),
	vec3(0.2333, 0.5333, 0.2333),
	vec3(0.2333, 0.5666, 0.2000),
	vec3(0.2333, 0.6000, 0.1666),
	vec3(0.2333, 0.6333, 0.1333),
	vec3(0.2333, 0.6666, 0.1000),
	vec3(0.2333, 0.6999, 0.0666),
	vec3(0.2333, 0.7333, 0.0333),
	vec3(0.2333, 0.7666, 0.0000),
	vec3(0.2666, 0.0000, 0.7333),
	vec3(0.2666, 0.0333, 0.6999),
	vec3(0.2666, 0.0666, 0.6666),
	vec3(0.2666, 0.1000, 0.6333),
	vec3(0.2666, 0.1333, 0.6000),
	vec3(0.2666, 0.1666, 0.5666),
	vec3(0.2666, 0.2000, 0.5333),
	vec3(0.2666, 0.2333, 0.5000),
	vec3(0.2666, 0.2666, 0.4666),
	vec3(0.2666, 0.3000, 0.4333),
	vec3(0.2666, 0.3333, 0.4000),
	vec3(0.2666, 0.3666, 0.3666),
	vec3(0.2666, 0.4000, 0.3333),
	vec3(0.2666, 0.4333, 0.3000),
	vec3(0.2666, 0.4666, 0.2666),
	vec3(0.2666, 0.5000, 0.2333),
	vec3(0.2666, 0.5333, 0.2000),
	vec3(0.2666, 0.5666, 0.1666),
	vec3(0.2666, 0.6000, 0.1333),
	vec3(0.2666, 0.6333, 0.1000),
	vec3(0.2666, 0.6666, 0.0666),
	vec3(0.2666, 0.6999, 0.0333),
	vec3(0.2666, 0.7333, 0.0000),
	vec3(0.3000, 0.0000, 0.6999),
	vec3(0.3000, 0.0333, 0.6666),
	vec3(0.3000, 0.0666, 0.6333),
	vec3(0.3000, 0.1000, 0.6000),
	vec3(0.3000, 0.1333, 0.5666),
	vec3(0.3000, 0.1666, 0.5333),
	vec3(0.3000, 0.2000, 0.5000),
	vec3(0.3000, 0.2333, 0.4666),
	vec3(0.3000, 0.2666, 0.4333),
	vec3(0.3000, 0.3000, 0.4000),
	vec3(0.3000, 0.3333, 0.3666),
	vec3(0.3000, 0.3666, 0.3333),
	vec3(0.3000, 0.4000, 0.3000),
	vec3(0.3000, 0.4333, 0.2666),
	vec3(0.3000, 0.4666, 0.2333),
	vec3(0.3000, 0.5000, 0.2000),
	vec3(0.3000, 0.5333, 0.1666),
	vec3(0.3000, 0.5666, 0.1333),
	vec3(0.3000, 0.6000, 0.1000),
	vec3(0.3000, 0.6333, 0.0666),
	vec3(0.3000, 0.6666, 0.0333),
	vec3(0.3000, 0.6999, 0.0000),
	vec3(0.3333, 0.0000, 0.6666),
	vec3(0.3333, 0.0333, 0.6333),
	vec3(0.3333, 0.0666, 0.6000),
	vec3(0.3333, 0.1000, 0.5666),
	vec3(0.3333, 0.1333, 0.5333),
	vec3(0.3333, 0.1666, 0.5000),
	vec3(0.3333, 0.2000, 0.4666),
	vec3(0.3333, 0.2333, 0.4333),
	vec3(0.3333, 0.2666, 0.4000),
	vec3(0.3333, 0.3000, 0.3666),
	vec3(0.3333, 0.3333, 0.3333),
	vec3(0.3333, 0.3666, 0.3000),
	vec3(0.3333, 0.4000, 0.2666),
	vec3(0.3333, 0.4333, 0.2333),
	vec3(0.3333, 0.4666, 0.2000),
	vec3(0.3333, 0.5000, 0.1666),
	vec3(0.3333, 0.5333, 0.1333),
	vec3(0.3333, 0.5666, 0.1000),
	vec3(0.3333, 0.6000, 0.0666),
	vec3(0.3333, 0.6333, 0.0333),
	vec3(0.3333, 0.6666, 0.0000),
	vec3(0.3666, 0.0000, 0.6333),
	vec3(0.3666, 0.0333, 0.6000),
	vec3(0.3666, 0.0666, 0.5666),
	vec3(0.3666, 0.1000, 0.5333),
	vec3(0.3666, 0.1333, 0.5000),
	vec3(0.3666, 0.1666, 0.4666),
	vec3(0.3666, 0.2000, 0.4333),
	vec3(0.3666, 0.2333, 0.4000),
	vec3(0.3666, 0.2666, 0.3666),
	vec3(0.3666, 0.3000, 0.3333),
	vec3(0.3666, 0.3333, 0.3000),
	vec3(0.3666, 0.3666, 0.2666),
	vec3(0.3666, 0.4000, 0.2333),
	vec3(0.3666, 0.4333, 0.2000),
	vec3(0.3666, 0.4666, 0.1666),
	vec3(0.3666, 0.5000, 0.1333),
	vec3(0.3666, 0.5333, 0.1000),
	vec3(0.3666, 0.5666, 0.0666),
	vec3(0.3666, 0.6000, 0.0333),
	vec3(0.3666, 0.6333, 0.0000),
	vec3(0.4000, 0.0000, 0.6000),
	vec3(0.4000, 0.0333, 0.5666),
	vec3(0.4000, 0.0666, 0.5333),
	vec3(0.4000, 0.1000, 0.5000),
	vec3(0.4000, 0.1333, 0.4666),
	vec3(0.4000, 0.1666, 0.4333),
	vec3(0.4000, 0.2000, 0.4000),
	vec3(0.4000, 0.2333, 0.3666),
	vec3(0.4000, 0.2666, 0.3333),
	vec3(0.4000, 0.3000, 0.3000),
	vec3(0.4000, 0.3333, 0.2666),
	vec3(0.4000, 0.3666, 0.2333),
	vec3(0.4000, 0.4000, 0.2000),
	vec3(0.4000, 0.4333, 0.1666),
	vec3(0.4000, 0.4666, 0.1333),
	vec3(0.4000, 0.5000, 0.1000),
	vec3(0.4000, 0.5333, 0.0666),
	vec3(0.4000, 0.5666, 0.0333),
	vec3(0.4000, 0.6000, 0.0000),
	vec3(0.4333, 0.0000, 0.5666),
	vec3(0.4333, 0.0333, 0.5333),
	vec3(0.4333, 0.0666, 0.5000),
	vec3(0.4333, 0.1000, 0.4666),
	vec3(0.4333, 0.1333, 0.4333),
	vec3(0.4333, 0.1666, 0.4000),
	vec3(0.4333, 0.2000, 0.3666),
	vec3(0.4333, 0.2333, 0.3333),
	vec3(0.4333, 0.2666, 0.3000),
	vec3(0.4333, 0.3000, 0.2666),
	vec3(0.4333, 0.3333, 0.2333),
	vec3(0.4333, 0.3666, 0.2000),
	vec3(0.4333, 0.4000, 0.1666),
	vec3(0.4333, 0.4333, 0.1333),
	vec3(0.4333, 0.4666, 0.1000),
	vec3(0.4333, 0.5000, 0.0666),
	vec3(0.4333, 0.5333, 0.0333),
	vec3(0.4333, 0.5666, 0.0000),
	vec3(0.4666, 0.0000, 0.5333),
	vec3(0.4666, 0.0333, 0.5000),
	vec3(0.4666, 0.0666, 0.4666),
	vec3(0.4666, 0.1000, 0.4333),
	vec3(0.4666, 0.1333, 0.4000),
	vec3(0.4666, 0.1666, 0.3666),
	vec3(0.4666, 0.2000, 0.3333),
	vec3(0.4666, 0.2333, 0.3000),
	vec3(0.4666, 0.2666, 0.2666),
	vec3(0.4666, 0.3000, 0.2333),
	vec3(0.4666, 0.3333, 0.2000),
	vec3(0.4666, 0.3666, 0.1666),
	vec3(0.4666, 0.4000, 0.1333),
	vec3(0.4666, 0.4333, 0.1000),
	vec3(0.4666, 0.4666, 0.0666),
	vec3(0.4666, 0.5000, 0.0333),
	vec3(0.4666, 0.5333, 0.0000),
	vec3(0.5000, 0.0000, 0.5000),
	vec3(0.5000, 0.0333, 0.4666),
	vec3(0.5000, 0.0666, 0.4333),
	vec3(0.5000, 0.1000, 0.4000),
	vec3(0.5000, 0.1333, 0.3666),
	vec3(0.5000, 0.1666, 0.3333),
	vec3(0.5000, 0.2000, 0.3000),
	vec3(0.5000, 0.2333, 0.2666),
	vec3(0.5000, 0.2666, 0.2333),
	vec3(0.5000, 0.3000, 0.2000),
	vec3(0.5000, 0.3333, 0.1666),
	vec3(0.5000, 0.3666, 0.1333),
	vec3(0.5000, 0.4000, 0.1000),
	vec3(0.5000, 0.4333, 0.0666),
	vec3(0.5000, 0.4666, 0.0333),
	vec3(0.5000, 0.5000, 0.0000),
	vec3(0.5333, 0.0000, 0.4666),
	vec3(0.5333, 0.0333, 0.4333),
	vec3(0.5333, 0.0666, 0.4000),
	vec3(0.5333, 0.1000, 0.3666),
	vec3(0.5333, 0.1333, 0.3333),
	vec3(0.5333, 0.1666, 0.3000),
	vec3(0.5333, 0.2000, 0.2666),
	vec3(0.5333, 0.2333, 0.2333),
	vec3(0.5333, 0.2666, 0.2000),
	vec3(0.5333, 0.3000, 0.1666),
	vec3(0.5333, 0.3333, 0.1333),
	vec3(0.5333, 0.3666, 0.1000),
	vec3(0.5333, 0.4000, 0.0666),
	vec3(0.5333, 0.4333, 0.0333),
	vec3(0.5333, 0.4666, 0.0000),
	vec3(0.5666, 0.0000, 0.4333),
	vec3(0.5666, 0.0333, 0.4000),
	vec3(0.5666, 0.0666, 0.3666),
	vec3(0.5666, 0.1000, 0.3333),
	vec3(0.5666, 0.1333, 0.3000),
	vec3(0.5666, 0.1666, 0.2666),
	vec3(0.5666, 0.2000, 0.2333),
	vec3(0.5666, 0.2333, 0.2000),
	vec3(0.5666, 0.2666, 0.1666),
	vec3(0.5666, 0.3000, 0.1333),
	vec3(0.5666, 0.3333, 0.1000),
	vec3(0.5666, 0.3666, 0.0666),
	vec3(0.5666, 0.4000, 0.0333),
	vec3(0.5666, 0.4333, 0.0000),
	vec3(0.6000, 0.0000, 0.4000),
	vec3(0.6000, 0.0333, 0.3666),
	vec3(0.6000, 0.0666, 0.3333),
	vec3(0.6000, 0.1000, 0.3000),
	vec3(0.6000, 0.1333, 0.2666),
	vec3(0.6000, 0.1666, 0.2333),
	vec3(0.6000, 0.2000, 0.2000),
	vec3(0.6000, 0.2333, 0.1666),
	vec3(0.6000, 0.2666, 0.1333),
	vec3(0.6000, 0.3000, 0.1000),
	vec3(0.6000, 0.3333, 0.0666),
	vec3(0.6000, 0.3666, 0.0333),
	vec3(0.6000, 0.4000, 0.0000),
	vec3(0.6333, 0.0000, 0.3666),
	vec3(0.6333, 0.0333, 0.3333),
	vec3(0.6333, 0.0666, 0.3000),
	vec3(0.6333, 0.1000, 0.2666),
	vec3(0.6333, 0.1333, 0.2333),
	vec3(0.6333, 0.1666, 0.2000),
	vec3(0.6333, 0.2000, 0.1666),
	vec3(0.6333, 0.2333, 0.1333),
	vec3(0.6333, 0.2666, 0.1000),
	vec3(0.6333, 0.3000, 0.0666),
	vec3(0.6333, 0.3333, 0.0333),
	vec3(0.6333, 0.3666, 0.0000),
	vec3(0.6666, 0.0000, 0.3333),
	vec3(0.6666, 0.0333, 0.3000),
	vec3(0.6666, 0.0666, 0.2666),
	vec3(0.6666, 0.1000, 0.2333),
	vec3(0.6666, 0.1333, 0.2000),
	vec3(0.6666, 0.1666, 0.1666),
	vec3(0.6666, 0.2000, 0.1333),
	vec3(0.6666, 0.2333, 0.1000),
	vec3(0.6666, 0.2666, 0.0666),
	vec3(0.6666, 0.3000, 0.0333),
	vec3(0.6666, 0.3333, 0.0000),
	vec3(0.6999, 0.0000, 0.3000),
	vec3(0.6999, 0.0333, 0.2666),
	vec3(0.6999, 0.0666, 0.2333),
	vec3(0.6999, 0.1000, 0.2000),
	vec3(0.6999, 0.1333, 0.1666),
	vec3(0.6999, 0.1666, 0.1333),
	vec3(0.6999, 0.2000, 0.1000),
	vec3(0.6999, 0.2333, 0.0666),
	vec3(0.6999, 0.2666, 0.0333),
	vec3(0.6999, 0.3000, 0.0000),
	vec3(0.7333, 0.0000, 0.2666),
	vec3(0.7333, 0.0333, 0.2333),
	vec3(0.7333, 0.0666, 0.2000),
	vec3(0.7333, 0.1000, 0.1666),
	vec3(0.7333, 0.1333, 0.1333),
	vec3(0.7333, 0.1666, 0.1000),
	vec3(0.7333, 0.2000, 0.0666),
	vec3(0.7333, 0.2333, 0.0333),
	vec3(0.7333, 0.2666, 0.0000),
	vec3(0.7666, 0.0000, 0.2333),
	vec3(0.7666, 0.0333, 0.2000),
	vec3(0.7666, 0.0666, 0.1666),
	vec3(0.7666, 0.1000, 0.1333),
	vec3(0.7666, 0.1333, 0.1000),
	vec3(0.7666, 0.1666, 0.0666),
	vec3(0.7666, 0.2000, 0.0333),
	vec3(0.7666, 0.2333, 0.0000),
	vec3(0.8000, 0.0000, 0.2000),
	vec3(0.8000, 0.0333, 0.1666),
	vec3(0.8000, 0.0666, 0.1333),
	vec3(0.8000, 0.1000, 0.1000),
	vec3(0.8000, 0.1333, 0.0666),
	vec3(0.8000, 0.1666, 0.0333),
	vec3(0.8000, 0.2000, 0.0000),
	vec3(0.8333, 0.0000, 0.1666),
	vec3(0.8333, 0.0333, 0.1333),
	vec3(0.8333, 0.0666, 0.1000),
	vec3(0.8333, 0.1000, 0.0666),
	vec3(0.8333, 0.1333, 0.0333),
	vec3(0.8333, 0.1666, 0.0000),
	vec3(0.8666, 0.0000, 0.1333),
	vec3(0.8666, 0.0333, 0.1000),
	vec3(0.8666, 0.0666, 0.0666),
	vec3(0.8666, 0.1000, 0.0333),
	vec3(0.8666, 0.1333, 0.0000),
	vec3(0.8999, 0.0000, 0.1000),
	vec3(0.8999, 0.0333, 0.0666),
	vec3(0.8999, 0.0666, 0.0333),
	vec3(0.8999, 0.1000, 0.0000),
	vec3(0.9333, 0.0000, 0.0666),
	vec3(0.9333, 0.0333, 0.0333),
	vec3(0.9333, 0.0666, 0.0000),
	vec3(0.9666, 0.0000, 0.0333),
	vec3(0.9666, 0.0333, 0.0000),
	vec3(1.0000, 0.0000, 0.0000)
);

void fragment() {
	// 8 bit 253 index, 2 spare
	//vec3 weights = vec3(w_1, w_2, w_3);
	//weights /= w_1 + w_2 + w_3; // normalize to sum = 1
	//int wx = int(round(weights.x * 21.));
	//int wy = int(round(weights.y * 21.));
	//int index = (22 * wx - (wx * (wx - 1)) / 2) + wy;
	//ALBEDO = BARY_CENTRIC_LUT[index];
	
	// 9 bit 496 index, 16 spare
	vec3 weights = normalize(vec3(w_1, w_2, w_3));
	weights /= w_1 + w_2 + w_3; // normalize to sum = 1
	int wx = int(round(weights.x * 30.));
	int wy = int(round(weights.y * 30.));
	int index = (31 * wx - (wx * (wx - 1)) / 2) + wy; // Triangle index
	ALBEDO = BARY_CENTRIC_9BIT_LUT[index];
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_noarx"]
render_priority = 0
shader = SubResource("Shader_a202f")
shader_parameter/w_1 = 1.0
shader_parameter/w_2 = 1.0
shader_parameter/w_3 = 0.0

[sub_resource type="GDScript" id="GDScript_a0tk4"]
script/source = "@tool
extends MeshInstance3D

@export var n: int = 21
@export var button: bool = false :
	set(value):
		var arr: Array = generate_barycentric_lut(n)
		for i in arr:
			print(\"vec3(\",str(i.x).pad_decimals(4),\", \",str(i.y).pad_decimals(4),\", \",str(i.z).pad_decimals(4),\"),\")

func generate_barycentric_lut(N: int) -> Array:
	var lut: Array = []
	for i in range(N + 1):
		for j in range(N + 1 - i):
			var w1: float = clampf(float(i) / float(N), 0., 1.)
			var w2: float = clampf(float(j) / float(N), 0., 1.)
			var w3: float = clampf(1.0 - w1 - w2, 0., 1.)
			lut.append(Vector3(w1, w2, w3))
	print(lut.size())
	return lut
"

[node name="Node3D" type="Node3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("BoxMesh_4xowi")
surface_material_override/0 = SubResource("ShaderMaterial_noarx")
script = SubResource("GDScript_a0tk4")
n = 30
metadata/_edit_lock_ = true
